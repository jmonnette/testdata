{
  "prompts": [
    {
      "id": "c581c2cb-4fbb-4728-bb69-e3b6293e9ced",
      "name": "JSON Schema Generator",
      "description": "Generate a schema file based on an example JSON",
      "content": "Using the JSON object as a template, generate a complete JSON schema to use for validation.  Your output should be JSON.\n\n  Use the JSON field names and example values to infer the data types.\n  You can also infer business rules about the data from the field names.\n\n  Where possible based on inference from the field name, include regex pattern validations.\n\n  For array fields, the digits in parentheses in the field name indicate the range of array sizes to generate.\n  For example, \"(1,3)\" indicates that there should be 1 to 3 objects in the generated array.\n  Always exclude this parenthetical from the field name in the generated output JSON.\n\n  For date fields, the dates in parentheses in the field name indicate the valid date range for the field.\n  For example, \"(2002-01-01,2003-06-30)\" indicates that the date must be between January 1, 2002 and June 30, 2003.\n  Always exclude this parenthetical from the field name in the generated output JSON.\n  If a date range is specified, assume that a custom validator exists that can validate the range.  The range should be included in the schema as a field called date_range.\n  If a date range is not specified, do not include the date_range field.\n\n  For text fields, the values in parentheses indicate the set of valid values for the field.\n  You should choose only from these values when generating the data for the field.\n  Always exclude this parenthetical from the field name in the generated output JSON.\n\n  If the field name contains square brackets, \"[]\", the value between the square brackets indicates the data type for the field.\n  Make sure that the generated value matches the data type when specified.  If not specified, then infer the data type from the example value and the field name.\n  Include regex patterns to validate field lengths based on the specified data types.\n  Always exclude the brackets and bracketed text from the field name in the output.\n\n  Remember, the part of the parentheticals in the template JSON field names in parentheses are not to be included in the JSON output.\n  Remember, the brackets and bracketed text in the field names are not to be included in the JSON output.\n  Remember, you must output the complete JSON schema.\n\n  Please consider these additional rules when generating the schema:\n\n  {{Additional Description}}\n\n  JSON:\n\n  {{JSON Example}}"
    }
  ],
  "folders": []
}